Nonterminals useless in grammar

    FunDeclList


Terminals unused in grammar

    IF
    ELSE
    WHILE
    RETURN
    KEYWORD
    SINGLE_QOUTE
    COMMA
    OR
    LSS
    GTR
    LEQ
    GEQ


Rules useless in grammar

   53 FunDeclList: %empty
   54            | FunDecl FunDeclList
   55            | FunDecl


Rules useless in parser due to conflicts

   14 ParamDeclList: ParamDecl

   16 ParamDecl: %empty


State 10 conflicts: 1 shift/reduce
State 14 conflicts: 3 shift/reduce
State 16 conflicts: 1 shift/reduce
State 18 conflicts: 1 shift/reduce
State 20 conflicts: 2 shift/reduce
State 22 conflicts: 1 shift/reduce, 1 reduce/reduce
State 42 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce, 2 reduce/reduce
State 52 conflicts: 1 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | StmtList
    6     | VarDecl
    7     | ArrayDecl

    8 FunDecl: TYPE ID LPAREN ParamDeclList RPAREN Block

    9 FuncallStmtList: FuncallStmt FuncallStmtList
   10                | FuncallStmt

   11 FuncallStmt: ID LPAREN ParamDeclList RPAREN SEMICOLON

   12 ParamDeclList: %empty
   13              | ParamDecl ParamDeclList
   14              | ParamDecl

   15 ParamDecl: TYPE ID
   16          | %empty

   17 Block: LBRACE FunBlock RBRACE

   18 FunBlock: ArrayDeclList
   19         | VarDeclList
   20         | StmtList

   21 VarDeclList: VarDecl VarDeclList
   22            | VarDecl

   23 VarDecl: TYPE ID SEMICOLON

   24 ArrayDeclList: ArrayDecl ArrayDeclList
   25              | ArrayDecl

   26 ArrayDecl: TYPE ID LBRACKET NUMBER RBRACKET SEMICOLON

   27 StmtList: Stmt StmtList
   28         | Stmt

   29 Stmt: AssignStmtList
   30     | MathStatList
   31     | WriteStmtList
   32     | FuncallStmtList

   33 AssignStmtList: AssignStmt AssignStmtList
   34               | AssignStmt

   35 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ NUMBER SEMICOLON
   36           | ID LBRACKET NUMBER RBRACKET EQ CHAR SEMICOLON
   37           | ID EQ CHAR SEMICOLON
   38           | ID EQ NUMBER SEMICOLON
   39           | ID EQ MathStat SEMICOLON

   40 WriteStmtList: WriteStmt WriteStmtList
   41              | WriteStmt

   42 WriteStmt: WRITE ID SEMICOLON

   43 BinOp: ADD
   44      | SUB
   45      | MULTIPLY
   46      | DIV

   47 MathStatList: MathStat MathStatList
   48             | MathStat

   49 MathStat: NUMBER BinOp MathStat
   50         | ID BinOp MathStat
   51         | NUMBER
   52         | ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 8 11 15 23 26 35 36 37 38 39 42 50 52
    WRITE <string> (259) 42
    IF <string> (260)
    ELSE <string> (261)
    WHILE <string> (262)
    RETURN <string> (263)
    TYPE <string> (264) 8 15 23 26
    KEYWORD <string> (265)
    NUMBER <string> (266) 26 35 36 38 49 51
    CHAR <string> (267) 36 37
    SINGLE_QOUTE <char> (268)
    SEMICOLON <char> (269) 11 23 26 35 36 37 38 39 42
    COMMA <char> (270)
    EQ <char> (271) 35 36 37 38 39
    OR <char> (272)
    LSS <char> (273)
    GTR <char> (274)
    LEQ <char> (275)
    GEQ <char> (276)
    LPAREN <char> (277) 8 11
    RPAREN <char> (278) 8 11
    LBRACE <char> (279) 17
    RBRACE <char> (280) 17
    LBRACKET <char> (281) 26 35 36
    RBRACKET <char> (282) 26 35 36
    ADD <char> (283) 43
    SUB <char> (284) 44
    MULTIPLY <char> (285) 45
    DIV <char> (286) 46


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    Program <ast> (33)
        on left: 1
        on right: 0
    DeclList <ast> (34)
        on left: 2 3
        on right: 1 2
    Decl <ast> (35)
        on left: 4 5 6 7
        on right: 2 3
    FunDecl <ast> (36)
        on left: 8
        on right: 4
    FuncallStmtList <ast> (37)
        on left: 9 10
        on right: 9 32
    FuncallStmt <ast> (38)
        on left: 11
        on right: 9 10
    ParamDeclList <ast> (39)
        on left: 12 13 14
        on right: 8 11 13
    ParamDecl <ast> (40)
        on left: 15 16
        on right: 13 14
    Block <ast> (41)
        on left: 17
        on right: 8
    FunBlock (42)
        on left: 18 19 20
        on right: 17
    VarDeclList <ast> (43)
        on left: 21 22
        on right: 19 21
    VarDecl <ast> (44)
        on left: 23
        on right: 6 21 22
    ArrayDeclList <ast> (45)
        on left: 24 25
        on right: 18 24
    ArrayDecl <ast> (46)
        on left: 26
        on right: 7 24 25
    StmtList <ast> (47)
        on left: 27 28
        on right: 5 20 27
    Stmt <ast> (48)
        on left: 29 30 31 32
        on right: 27 28
    AssignStmtList <ast> (49)
        on left: 33 34
        on right: 29 33
    AssignStmt <ast> (50)
        on left: 35 36 37 38 39
        on right: 33 34
    WriteStmtList <ast> (51)
        on left: 40 41
        on right: 31 40
    WriteStmt <ast> (52)
        on left: 42
        on right: 40 41
    BinOp (53)
        on left: 43 44 45 46
        on right: 49 50
    MathStatList <ast> (54)
        on left: 47 48
        on right: 30 47
    MathStat <ast> (55)
        on left: 49 50 51 52
        on right: 39 47 48 49 50


State 0

    0 $accept: . Program $end

    ID      shift, and go to state 1
    WRITE   shift, and go to state 2
    TYPE    shift, and go to state 3
    NUMBER  shift, and go to state 4

    Program          go to state 5
    DeclList         go to state 6
    Decl             go to state 7
    FunDecl          go to state 8
    FuncallStmtList  go to state 9
    FuncallStmt      go to state 10
    VarDecl          go to state 11
    ArrayDecl        go to state 12
    StmtList         go to state 13
    Stmt             go to state 14
    AssignStmtList   go to state 15
    AssignStmt       go to state 16
    WriteStmtList    go to state 17
    WriteStmt        go to state 18
    MathStatList     go to state 19
    MathStat         go to state 20


State 1

   11 FuncallStmt: ID . LPAREN ParamDeclList RPAREN SEMICOLON
   35 AssignStmt: ID . LBRACKET NUMBER RBRACKET EQ NUMBER SEMICOLON
   36           | ID . LBRACKET NUMBER RBRACKET EQ CHAR SEMICOLON
   37           | ID . EQ CHAR SEMICOLON
   38           | ID . EQ NUMBER SEMICOLON
   39           | ID . EQ MathStat SEMICOLON
   50 MathStat: ID . BinOp MathStat
   52         | ID .

    EQ        shift, and go to state 21
    LPAREN    shift, and go to state 22
    LBRACKET  shift, and go to state 23
    ADD       shift, and go to state 24
    SUB       shift, and go to state 25
    MULTIPLY  shift, and go to state 26
    DIV       shift, and go to state 27

    $default  reduce using rule 52 (MathStat)

    BinOp  go to state 28


State 2

   42 WriteStmt: WRITE . ID SEMICOLON

    ID  shift, and go to state 29


State 3

    8 FunDecl: TYPE . ID LPAREN ParamDeclList RPAREN Block
   23 VarDecl: TYPE . ID SEMICOLON
   26 ArrayDecl: TYPE . ID LBRACKET NUMBER RBRACKET SEMICOLON

    ID  shift, and go to state 30


State 4

   49 MathStat: NUMBER . BinOp MathStat
   51         | NUMBER .

    ADD       shift, and go to state 24
    SUB       shift, and go to state 25
    MULTIPLY  shift, and go to state 26
    DIV       shift, and go to state 27

    $default  reduce using rule 51 (MathStat)

    BinOp  go to state 31


State 5

    0 $accept: Program . $end

    $end  shift, and go to state 32


State 6

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 7

    2 DeclList: Decl . DeclList
    3         | Decl .

    ID      shift, and go to state 1
    WRITE   shift, and go to state 2
    TYPE    shift, and go to state 3
    NUMBER  shift, and go to state 4

    $default  reduce using rule 3 (DeclList)

    DeclList         go to state 33
    Decl             go to state 7
    FunDecl          go to state 8
    FuncallStmtList  go to state 9
    FuncallStmt      go to state 10
    VarDecl          go to state 11
    ArrayDecl        go to state 12
    StmtList         go to state 13
    Stmt             go to state 14
    AssignStmtList   go to state 15
    AssignStmt       go to state 16
    WriteStmtList    go to state 17
    WriteStmt        go to state 18
    MathStatList     go to state 19
    MathStat         go to state 20


State 8

    4 Decl: FunDecl .

    $default  reduce using rule 4 (Decl)


State 9

   32 Stmt: FuncallStmtList .

    $default  reduce using rule 32 (Stmt)


State 10

    9 FuncallStmtList: FuncallStmt . FuncallStmtList
   10                | FuncallStmt .

    ID  shift, and go to state 34

    ID        [reduce using rule 10 (FuncallStmtList)]
    $default  reduce using rule 10 (FuncallStmtList)

    FuncallStmtList  go to state 35
    FuncallStmt      go to state 10


State 11

    6 Decl: VarDecl .

    $default  reduce using rule 6 (Decl)


State 12

    7 Decl: ArrayDecl .

    $default  reduce using rule 7 (Decl)


State 13

    5 Decl: StmtList .

    $default  reduce using rule 5 (Decl)


State 14

   27 StmtList: Stmt . StmtList
   28         | Stmt .

    ID      shift, and go to state 1
    WRITE   shift, and go to state 2
    NUMBER  shift, and go to state 4

    ID        [reduce using rule 28 (StmtList)]
    WRITE     [reduce using rule 28 (StmtList)]
    NUMBER    [reduce using rule 28 (StmtList)]
    $default  reduce using rule 28 (StmtList)

    FuncallStmtList  go to state 9
    FuncallStmt      go to state 10
    StmtList         go to state 36
    Stmt             go to state 14
    AssignStmtList   go to state 15
    AssignStmt       go to state 16
    WriteStmtList    go to state 17
    WriteStmt        go to state 18
    MathStatList     go to state 19
    MathStat         go to state 20


State 15

   29 Stmt: AssignStmtList .

    $default  reduce using rule 29 (Stmt)


State 16

   33 AssignStmtList: AssignStmt . AssignStmtList
   34               | AssignStmt .

    ID  shift, and go to state 37

    ID        [reduce using rule 34 (AssignStmtList)]
    $default  reduce using rule 34 (AssignStmtList)

    AssignStmtList  go to state 38
    AssignStmt      go to state 16


State 17

   31 Stmt: WriteStmtList .

    $default  reduce using rule 31 (Stmt)


State 18

   40 WriteStmtList: WriteStmt . WriteStmtList
   41              | WriteStmt .

    WRITE  shift, and go to state 2

    WRITE     [reduce using rule 41 (WriteStmtList)]
    $default  reduce using rule 41 (WriteStmtList)

    WriteStmtList  go to state 39
    WriteStmt      go to state 18


State 19

   30 Stmt: MathStatList .

    $default  reduce using rule 30 (Stmt)


State 20

   47 MathStatList: MathStat . MathStatList
   48             | MathStat .

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 4

    ID        [reduce using rule 48 (MathStatList)]
    NUMBER    [reduce using rule 48 (MathStatList)]
    $default  reduce using rule 48 (MathStatList)

    MathStatList  go to state 41
    MathStat      go to state 20


State 21

   37 AssignStmt: ID EQ . CHAR SEMICOLON
   38           | ID EQ . NUMBER SEMICOLON
   39           | ID EQ . MathStat SEMICOLON

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 42
    CHAR    shift, and go to state 43

    MathStat  go to state 44


State 22

   11 FuncallStmt: ID LPAREN . ParamDeclList RPAREN SEMICOLON

    TYPE  shift, and go to state 45

    TYPE      [reduce using rule 16 (ParamDecl)]
    RPAREN    reduce using rule 12 (ParamDeclList)
    RPAREN    [reduce using rule 16 (ParamDecl)]
    $default  reduce using rule 12 (ParamDeclList)

    ParamDeclList  go to state 46
    ParamDecl      go to state 47


State 23

   35 AssignStmt: ID LBRACKET . NUMBER RBRACKET EQ NUMBER SEMICOLON
   36           | ID LBRACKET . NUMBER RBRACKET EQ CHAR SEMICOLON

    NUMBER  shift, and go to state 48


State 24

   43 BinOp: ADD .

    $default  reduce using rule 43 (BinOp)


State 25

   44 BinOp: SUB .

    $default  reduce using rule 44 (BinOp)


State 26

   45 BinOp: MULTIPLY .

    $default  reduce using rule 45 (BinOp)


State 27

   46 BinOp: DIV .

    $default  reduce using rule 46 (BinOp)


State 28

   50 MathStat: ID BinOp . MathStat

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 4

    MathStat  go to state 49


State 29

   42 WriteStmt: WRITE ID . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 30

    8 FunDecl: TYPE ID . LPAREN ParamDeclList RPAREN Block
   23 VarDecl: TYPE ID . SEMICOLON
   26 ArrayDecl: TYPE ID . LBRACKET NUMBER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 51
    LPAREN     shift, and go to state 52
    LBRACKET   shift, and go to state 53


State 31

   49 MathStat: NUMBER BinOp . MathStat

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 4

    MathStat  go to state 54


State 32

    0 $accept: Program $end .

    $default  accept


State 33

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 34

   11 FuncallStmt: ID . LPAREN ParamDeclList RPAREN SEMICOLON

    LPAREN  shift, and go to state 22


State 35

    9 FuncallStmtList: FuncallStmt FuncallStmtList .

    $default  reduce using rule 9 (FuncallStmtList)


State 36

   27 StmtList: Stmt StmtList .

    $default  reduce using rule 27 (StmtList)


State 37

   35 AssignStmt: ID . LBRACKET NUMBER RBRACKET EQ NUMBER SEMICOLON
   36           | ID . LBRACKET NUMBER RBRACKET EQ CHAR SEMICOLON
   37           | ID . EQ CHAR SEMICOLON
   38           | ID . EQ NUMBER SEMICOLON
   39           | ID . EQ MathStat SEMICOLON

    EQ        shift, and go to state 21
    LBRACKET  shift, and go to state 23


State 38

   33 AssignStmtList: AssignStmt AssignStmtList .

    $default  reduce using rule 33 (AssignStmtList)


State 39

   40 WriteStmtList: WriteStmt WriteStmtList .

    $default  reduce using rule 40 (WriteStmtList)


State 40

   50 MathStat: ID . BinOp MathStat
   52         | ID .

    ADD       shift, and go to state 24
    SUB       shift, and go to state 25
    MULTIPLY  shift, and go to state 26
    DIV       shift, and go to state 27

    $default  reduce using rule 52 (MathStat)

    BinOp  go to state 28


State 41

   47 MathStatList: MathStat MathStatList .

    $default  reduce using rule 47 (MathStatList)


State 42

   38 AssignStmt: ID EQ NUMBER . SEMICOLON
   49 MathStat: NUMBER . BinOp MathStat
   51         | NUMBER .

    SEMICOLON  shift, and go to state 55
    ADD        shift, and go to state 24
    SUB        shift, and go to state 25
    MULTIPLY   shift, and go to state 26
    DIV        shift, and go to state 27

    SEMICOLON  [reduce using rule 51 (MathStat)]

    BinOp  go to state 31


State 43

   37 AssignStmt: ID EQ CHAR . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 44

   39 AssignStmt: ID EQ MathStat . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 45

   15 ParamDecl: TYPE . ID

    ID  shift, and go to state 58


State 46

   11 FuncallStmt: ID LPAREN ParamDeclList . RPAREN SEMICOLON

    RPAREN  shift, and go to state 59


State 47

   13 ParamDeclList: ParamDecl . ParamDeclList
   14              | ParamDecl .

    TYPE  shift, and go to state 45

    TYPE      [reduce using rule 16 (ParamDecl)]
    RPAREN    reduce using rule 12 (ParamDeclList)
    RPAREN    [reduce using rule 14 (ParamDeclList)]
    RPAREN    [reduce using rule 16 (ParamDecl)]
    $default  reduce using rule 12 (ParamDeclList)

    ParamDeclList  go to state 60
    ParamDecl      go to state 47


State 48

   35 AssignStmt: ID LBRACKET NUMBER . RBRACKET EQ NUMBER SEMICOLON
   36           | ID LBRACKET NUMBER . RBRACKET EQ CHAR SEMICOLON

    RBRACKET  shift, and go to state 61


State 49

   50 MathStat: ID BinOp MathStat .

    $default  reduce using rule 50 (MathStat)


State 50

   42 WriteStmt: WRITE ID SEMICOLON .

    $default  reduce using rule 42 (WriteStmt)


State 51

   23 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 23 (VarDecl)


State 52

    8 FunDecl: TYPE ID LPAREN . ParamDeclList RPAREN Block

    TYPE  shift, and go to state 45

    TYPE      [reduce using rule 16 (ParamDecl)]
    RPAREN    reduce using rule 12 (ParamDeclList)
    RPAREN    [reduce using rule 16 (ParamDecl)]
    $default  reduce using rule 12 (ParamDeclList)

    ParamDeclList  go to state 62
    ParamDecl      go to state 47


State 53

   26 ArrayDecl: TYPE ID LBRACKET . NUMBER RBRACKET SEMICOLON

    NUMBER  shift, and go to state 63


State 54

   49 MathStat: NUMBER BinOp MathStat .

    $default  reduce using rule 49 (MathStat)


State 55

   38 AssignStmt: ID EQ NUMBER SEMICOLON .

    $default  reduce using rule 38 (AssignStmt)


State 56

   37 AssignStmt: ID EQ CHAR SEMICOLON .

    $default  reduce using rule 37 (AssignStmt)


State 57

   39 AssignStmt: ID EQ MathStat SEMICOLON .

    $default  reduce using rule 39 (AssignStmt)


State 58

   15 ParamDecl: TYPE ID .

    $default  reduce using rule 15 (ParamDecl)


State 59

   11 FuncallStmt: ID LPAREN ParamDeclList RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 60

   13 ParamDeclList: ParamDecl ParamDeclList .

    $default  reduce using rule 13 (ParamDeclList)


State 61

   35 AssignStmt: ID LBRACKET NUMBER RBRACKET . EQ NUMBER SEMICOLON
   36           | ID LBRACKET NUMBER RBRACKET . EQ CHAR SEMICOLON

    EQ  shift, and go to state 65


State 62

    8 FunDecl: TYPE ID LPAREN ParamDeclList . RPAREN Block

    RPAREN  shift, and go to state 66


State 63

   26 ArrayDecl: TYPE ID LBRACKET NUMBER . RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 67


State 64

   11 FuncallStmt: ID LPAREN ParamDeclList RPAREN SEMICOLON .

    $default  reduce using rule 11 (FuncallStmt)


State 65

   35 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ . NUMBER SEMICOLON
   36           | ID LBRACKET NUMBER RBRACKET EQ . CHAR SEMICOLON

    NUMBER  shift, and go to state 68
    CHAR    shift, and go to state 69


State 66

    8 FunDecl: TYPE ID LPAREN ParamDeclList RPAREN . Block

    LBRACE  shift, and go to state 70

    Block  go to state 71


State 67

   26 ArrayDecl: TYPE ID LBRACKET NUMBER RBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 68

   35 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 69

   36 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ CHAR . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 70

   17 Block: LBRACE . FunBlock RBRACE

    ID      shift, and go to state 1
    WRITE   shift, and go to state 2
    TYPE    shift, and go to state 75
    NUMBER  shift, and go to state 4

    FuncallStmtList  go to state 9
    FuncallStmt      go to state 10
    FunBlock         go to state 76
    VarDeclList      go to state 77
    VarDecl          go to state 78
    ArrayDeclList    go to state 79
    ArrayDecl        go to state 80
    StmtList         go to state 81
    Stmt             go to state 14
    AssignStmtList   go to state 15
    AssignStmt       go to state 16
    WriteStmtList    go to state 17
    WriteStmt        go to state 18
    MathStatList     go to state 19
    MathStat         go to state 20


State 71

    8 FunDecl: TYPE ID LPAREN ParamDeclList RPAREN Block .

    $default  reduce using rule 8 (FunDecl)


State 72

   26 ArrayDecl: TYPE ID LBRACKET NUMBER RBRACKET SEMICOLON .

    $default  reduce using rule 26 (ArrayDecl)


State 73

   35 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ NUMBER SEMICOLON .

    $default  reduce using rule 35 (AssignStmt)


State 74

   36 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ CHAR SEMICOLON .

    $default  reduce using rule 36 (AssignStmt)


State 75

   23 VarDecl: TYPE . ID SEMICOLON
   26 ArrayDecl: TYPE . ID LBRACKET NUMBER RBRACKET SEMICOLON

    ID  shift, and go to state 82


State 76

   17 Block: LBRACE FunBlock . RBRACE

    RBRACE  shift, and go to state 83


State 77

   19 FunBlock: VarDeclList .

    $default  reduce using rule 19 (FunBlock)


State 78

   21 VarDeclList: VarDecl . VarDeclList
   22            | VarDecl .

    TYPE  shift, and go to state 84

    $default  reduce using rule 22 (VarDeclList)

    VarDeclList  go to state 85
    VarDecl      go to state 78


State 79

   18 FunBlock: ArrayDeclList .

    $default  reduce using rule 18 (FunBlock)


State 80

   24 ArrayDeclList: ArrayDecl . ArrayDeclList
   25              | ArrayDecl .

    TYPE  shift, and go to state 86

    $default  reduce using rule 25 (ArrayDeclList)

    ArrayDeclList  go to state 87
    ArrayDecl      go to state 80


State 81

   20 FunBlock: StmtList .

    $default  reduce using rule 20 (FunBlock)


State 82

   23 VarDecl: TYPE ID . SEMICOLON
   26 ArrayDecl: TYPE ID . LBRACKET NUMBER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 51
    LBRACKET   shift, and go to state 53


State 83

   17 Block: LBRACE FunBlock RBRACE .

    $default  reduce using rule 17 (Block)


State 84

   23 VarDecl: TYPE . ID SEMICOLON

    ID  shift, and go to state 88


State 85

   21 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 21 (VarDeclList)


State 86

   26 ArrayDecl: TYPE . ID LBRACKET NUMBER RBRACKET SEMICOLON

    ID  shift, and go to state 89


State 87

   24 ArrayDeclList: ArrayDecl ArrayDeclList .

    $default  reduce using rule 24 (ArrayDeclList)


State 88

   23 VarDecl: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 89

   26 ArrayDecl: TYPE ID . LBRACKET NUMBER RBRACKET SEMICOLON

    LBRACKET  shift, and go to state 53
